"""
Module: data_visualization

This module provides visualization tools for displaying letters as images.
It includes:
- Visualization of multiple letters in a grid (data_input_visualization).
- Side-by-side comparison of the expected and classified letters (data_input_visualization_letters).

The visualizations help to interpret the neural network's performance
by showing how well the model classifies the input data.
"""

import matplotlib.pyplot as plt
import numpy as np

def data_input_visualization(data01, data02, data03):
    """
    Visualizes sample letters generated by the data_input function.
    The function uses subplots to display three letters side by side.
    Subplot har parameters^ nrows, ncols, index.
    Before visualization making reshape of 1D-vector to 5x6 array.

    :param data01: A sample letter (binary vector).
    :param data02: A sample letter (binary vector).
    :param data03: A sample letter (binary vector).
    :return: None
    """
    plt.subplot(1, 3, 1)
    litera01 = np.array(data01).reshape(5,6)
    plt.imshow(litera01, cmap = 'Blues')
    plt.xticks([])
    plt.yticks([])
    plt.subplot(1, 3, 2)
    litera02 = np.array(data02).reshape(5,6)
    plt.imshow(litera02, cmap = 'Blues')
    plt.xticks([])
    plt.yticks([])
    plt.subplot(1, 3, 3)
    litera03 = np.array(data03).reshape(5,6)
    plt.imshow(litera03, cmap = 'Blues')
    plt.xticks([])
    plt.yticks([])
    plt.show()

def data_input_visualization_letters(data01, data02):
    """
    Compares the expected letter and the classified letter using visualization.
    The function displays two images side by side to show the expected input
    and the neural network's classification result.

    :param data01: The expected letter (binary vector).
    :param data02: The classified letter (binary vector).
    :return: None
    """
    plt.subplot(1, 2, 1)
    litera01 = np.array(data01).reshape(5,6)
    plt.imshow(litera01, cmap = 'Blues')
    plt.title("Expected:", fontsize=10)
    plt.xticks([])
    plt.yticks([])
    plt.subplot(1, 2, 2)
    litera02 = np.array(data02).reshape(5,6)
    plt.imshow(litera02, cmap = 'Greens')
    plt.title("Classified by FFNN:", fontsize=10)
    plt.xticks([])
    plt.yticks([])
    plt.show()